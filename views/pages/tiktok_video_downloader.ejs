<!DOCTYPE html>
<html lang="en" data-theme="emerald">

<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Document</title>
	<%- include('../partials/head_assets.ejs') -%>

</head>

<body>
	<%- include('../partials/header.ejs') -%>

	<div class="main-content" style="min-height: calc(100vh - 558px);">



		<section class="" style="background-color: #4f37ac;">
			<h1 class="font-bold text-5xl text-center text-white">Tải Video Tiktok </h1>
			<span class="block text-center mt-1 text-lg text-warning">Tải video từ Tiktok không logo, hình mờ, watermark</span>

			<svg id="wave" viewBox="0 0 100 15">
				<path fill="#fff" opacity="0.5" d="M0 30 V15 Q30 3 60 15 V30z"></path>
				<path fill="#fff" d="M0 30 V12 Q30 17 55 12 T100 11 V30z"></path>
			</svg>
		</section>

		<section class=" flex justify-center mt-8 ">
			<div class="join xl:w-1/2 lg:w-2/3 md:w-2/3 sm:w-96">
				<div class="w-full">
					<div class="w-full">
						<input value="https://www.tiktok.com/@cutekitten37/photo/7331554199328525611" id="input-video-url" class="input input-bordered join-item w-full" placeholder="Dán URL video tiktok..." />
					</div>
				</div>

				<button class="btn btn-square join-item tooltip flex justify-center items-center" id="btn-paste" data-tip="Click to paste video link">
					<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
						<path stroke-linecap="round" stroke-linejoin="round" d="M9 12h3.75M9 15h3.75M9 18h3.75m3 .75H18a2.25 2.25 0 0 0 2.25-2.25V6.108c0-1.135-.845-2.098-1.976-2.192a48.424 48.424 0 0 0-1.123-.08m-5.801 0c-.065.21-.1.433-.1.664 0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75 2.25 2.25 0 0 0-.1-.664m-5.8 0A2.251 2.251 0 0 1 13.5 2.25H15c1.012 0 1.867.668 2.15 1.586m-5.8 0c-.376.023-.75.05-1.124.08C9.095 4.01 8.25 4.973 8.25 6.108V8.25m0 0H4.875c-.621 0-1.125.504-1.125 1.125v11.25c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V9.375c0-.621-.504-1.125-1.125-1.125H8.25ZM6.75 12h.008v.008H6.75V12Zm0 3h.008v.008H6.75V15Zm0 3h.008v.008H6.75V18Z" />
					</svg>
				</button>

				<div class="indicator tooltip" data-tip="Click to get link download">
					<button class="btn btn-secondary join-item" id="btn-download">Search</button>
				</div>
			</div>
		</section>

		<section class="display-result mt-8  flex justify-center mx-4">

			<div role="alert" class="alert alert-warning mt-4 mx-auto p-3 py-2 rounded rounded-2 xl:w-1/2 lg:w-2/3 md:w-2/3 sm:w-96" style="display: none;">
				<svg xmlns="http://www.w3.org/2000/svg" fill="#FFF" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
					<path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m0-10.036A11.959 11.959 0 0 1 3.598 6 11.99 11.99 0 0 0 3 9.75c0 5.592 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.31-.21-2.57-.598-3.75h-.152c-3.196 0-6.1-1.25-8.25-3.286Zm0 13.036h.008v.008H12v-.008Z" />
				</svg>
				<span class="alert-msg text-dark"></span>
			</div>


			<span class="loading loading-ring loading-lg block mx-auto" style="display: none;"></span>


			<div style="display: none;" class="display-btn-download ">
				<h1 class="video-desc mb-4 font-bold text-base text-center mx-4 "></h1>
				<button class="btn mx-auto btn-success text-white btn-download-video-1 block">Download server 1</button> <br>
				<button class="btn mx-auto mt-3 btn-success text-white btn-download-video-2 block">Download server 2</button>
				<div class="grid grid-cols-1 md:grid-cols-4 gap-1 sm:gap-1 md:gap-4 sm:grid-cols-1 display-photos mx-4 mt-4"></div>
			</div>

		</section>
	</div>

	<%- include('../partials/introduce/tiktok_video_downloader.ejs') -%>

	<script>
		document.addEventListener("DOMContentLoaded", function() {
			const displayPhotos = document.querySelector('.display-photos');
			const btnDownload = document.getElementById("btn-download");
			const inputVideoUrl = document.getElementById("input-video-url");
			const loading = document.querySelector(".loading");
			const displayBtnDownload = document.querySelector(".display-btn-download");
			const videoDesc = document.querySelector(".video-desc");
			const btnDownSv1 = document.querySelector(".btn-download-video-1");
			const btnDownSv2 = document.querySelector(".btn-download-video-2");
			const btnPaste = document.getElementById("btn-paste");
			const alert = document.querySelector(".alert");
			const alertMsg = document.querySelector(".alert-msg");

			const showAlert = (msg = "", type = "WARNING") => {
				alertMsg.innerHTML = msg;
				alert.style.display = "flex";
				displayBtnDownload.style.display = "none";
			};

			const hideAlert = () => {
				alert.style.display = "none";
				alertMsg.innerText = "";
				displayBtnDownload.style.display = 'none'
				displayPhotos.innerHTML = ''
			};

			const pasteVideoLink = async () => {
				hideAlert();
				try {
					const permission = await navigator.permissions.query({
						name: "clipboard-read"
					});
					if (permission.state === "granted" || permission.state === "prompt") {
						const text = await navigator.clipboard.readText();
						inputVideoUrl.value += text;
					} else {
						showAlert("Không thể dán tự động, vui lòng dán thủ công!");
					}
				} catch (error) {
					showAlert("Không thể dán tự động, vui lòng dán thủ công!");
				}
			};

			const downloadVideo = () => {
				hideAlert();
				const videoUrl = inputVideoUrl.value;

				if (!videoUrl) {
					showAlert("Vui lòng nhập đúng định dạng URL!");
					return;
				}

				if (!videoUrl.includes("tiktok.com")) {
					showAlert("Vui lòng nhập đúng link TikTok!");
					return;
				}

				loading.style.display = "block";

				fetch("/get-details-tiktok-video", {
						method: "POST",
						headers: {
							"Content-Type": "application/json"
						},
						body: JSON.stringify({
							video_url: videoUrl
						})
					})
					.then(res => res.json())
					.then(res => {
						if (!res.msg && !res.type) {
							videoDesc.innerHTML = res.video.desc;
							const img = document.createElement("img");
							img.src = res.video.video.cover;
							img.style.width = "150px";
							img.classList.add("block", "mx-auto");
							videoDesc.appendChild(img);
							displayBtnDownload.style.display = "block";
							btnDownSv1.style.display = "block";
							btnDownSv2.style.display = "block";
							btnDownSv1.textContent = "Download server 1"
							btnDownSv1.onclick = () => window.open(res.server01_file);
							btnDownSv2.onclick = () => window.open(res.server02_file);
							displayBtnDownload.scrollIntoView()

						} else if (res.type == "photo") {
							displayBtnDownload.style.display = 'block'
							videoDesc.innerText = res.desc;
							btnDownSv1.textContent = "Download render video"
							btnDownSv1.onclick = () => window.open(res.video_render);
							btnDownSv2.style.display = 'none'

							for (e of res.photos) {
								let div = document.createElement('div');
								div.classList.add('card', 'card-compact', 'bg-base-100', 'shadow-xl', 'sm:w-96', 'md:w-40')
								div.innerHTML = `
								<figure>
									<img src="${e}" alt="photo" loading="lazy" />
								</figure>
								<div class="card-body">
									<a href="${e}" download="${e}" class="btn btn-primary w-full">Download Photo</a>
								</div>
								`;

								displayPhotos.appendChild(div)

							}

						} else {
							showAlert("Error, không thể lấy URL nguồn video!");
						}
					})
					.finally(() => {
						loading.style.display = "none";
					});
			};

			btnDownload.addEventListener("click", downloadVideo);
			btnPaste.addEventListener("click", pasteVideoLink);
		});
	</script>
	<%- include('../partials/footer.ejs') -%>

</body>

</html>