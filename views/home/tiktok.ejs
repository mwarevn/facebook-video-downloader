<div class="main-content" style="min-height: calc(100vh - 558px);">


	<section class="" style="background-color: #4f37ac;">
		<h1 class="font-bold text-5xl text-center text-white">Tải Video Tiktok </h1>
		<span class="block text-center mt-1 text-lg text-warning">Tải video từ Tiktok không logo, hình mờ, watermark</span>

		<svg id="wave" viewBox="0 0 100 15">
			<path fill="#fff" opacity="0.5" d="M0 30 V15 Q30 3 60 15 V30z"></path>
			<path fill="#fff" d="M0 30 V12 Q30 17 55 12 T100 11 V30z"></path>
		</svg>
	</section>

	<section class=" flex justify-center mt-8 ">
		<div class="join xl:w-1/2 lg:w-2/3 md:w-2/3 sm:w-96">
			<div class="w-full">
				<div class="w-full">
					<input value="https://www.tiktok.com/@meowp13/video/7337101675083189550" id="input-video-url" class="input input-bordered join-item w-full" placeholder="Dán URL video tiktok..." />
				</div>
			</div>

			<button class="btn btn-square join-item tooltip flex justify-center items-center" id="btn-paste" data-tip="Click to paste video link">
				<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
					<path stroke-linecap="round" stroke-linejoin="round" d="M9 12h3.75M9 15h3.75M9 18h3.75m3 .75H18a2.25 2.25 0 0 0 2.25-2.25V6.108c0-1.135-.845-2.098-1.976-2.192a48.424 48.424 0 0 0-1.123-.08m-5.801 0c-.065.21-.1.433-.1.664 0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75 2.25 2.25 0 0 0-.1-.664m-5.8 0A2.251 2.251 0 0 1 13.5 2.25H15c1.012 0 1.867.668 2.15 1.586m-5.8 0c-.376.023-.75.05-1.124.08C9.095 4.01 8.25 4.973 8.25 6.108V8.25m0 0H4.875c-.621 0-1.125.504-1.125 1.125v11.25c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V9.375c0-.621-.504-1.125-1.125-1.125H8.25ZM6.75 12h.008v.008H6.75V12Zm0 3h.008v.008H6.75V15Zm0 3h.008v.008H6.75V18Z" />
				</svg>
			</button>

			<div class="indicator tooltip" data-tip="Click to get link download">
				<button class="btn btn-secondary join-item" id="btn-download">Search</button>
			</div>
		</div>
	</section>

	<section class="display-result mt-8  flex justify-center mx-4">

		<div role="alert" class="alert alert-warning mt-4 mx-auto p-3 py-2 rounded rounded-2 xl:w-1/2 lg:w-2/3 md:w-2/3 sm:w-96" style="display: none;">
			<svg xmlns="http://www.w3.org/2000/svg" fill="#FFF" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
				<path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m0-10.036A11.959 11.959 0 0 1 3.598 6 11.99 11.99 0 0 0 3 9.75c0 5.592 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.31-.21-2.57-.598-3.75h-.152c-3.196 0-6.1-1.25-8.25-3.286Zm0 13.036h.008v.008H12v-.008Z" />
			</svg>
			<span class="alert-msg text-dark"></span>
		</div>


		<span class="loading loading-ring loading-lg block mx-auto" style="display: none;"></span>

		<div style="display: none;" class="display-btn-download">
			<button class="btn btn-success text-white btn-download-video-1">Download server 1</button> <br>
			<button class="btn mt-3 btn-success text-white btn-download-video-2">Download server 2</button>
		</div>

	</section>
</div>

<%- include('../partials/introduce/tiktok_video_downloader.ejs') -%>

<script>
	const $ = document.querySelector.bind(document);

	const btn_download = $("#btn-download");

	const displayBtnDownload = $('.display-btn-download')

	const input_video_url = $("#input-video-url")
	const loading = $('.loading')

	const btnPaste = $('#btn-paste')

	const alert = $('.alert');
	const alert_msg = $('.alert-msg');

	const btnDownSv1 = $('.btn-download-video-1')
	const btnDownSv2 = $('.btn-download-video-2')

	const showAlert = (msg = '', type = "WARNING") => {
		alert_msg.innerHTML = msg;
		alert.style.display = 'flex'
		displayBtnDownload.style.display = 'none'
	}

	const hideAlert = () => {
		alert.style.display = 'none'
		alert_msg.innerText = '';
	}

	btnPaste.onclick = () => {
		hideAlert()
		navigator.permissions.query({
			name: "clipboard-read"
		}).then(async (result) => {
			if (result.state === "granted" || result.state === "prompt") {
				/* write to the clipboard now */
				const text = await navigator.clipboard.readText()
				input_video_url.value += text;
			}
			showAlert("Error không thể dán tự động, vui lòng dán thủ công!")
		}).catch(er => {
			showAlert("Error không thể dán tự động, vui lòng dán thủ công!")
		})
	}

	btn_download.onclick = () => {
		displayBtnDownload.style.display = 'none'

		hideAlert()

		if (input_video_url.value == "" || !input_video_url) {
			showAlert('Vui lòng nhập đúng định dạng url!')
			return;
		}

		if (!input_video_url.value.includes('tiktok.com')) {
			showAlert("Vui lòng nhập đúng link tiktok!")
			return
		}

		loading.style.display = "block"
		// tbody.innerHTML = ''
		// table.style.display = 'none'

		fetch("/get-tiktok-video", {
				method: "POST",
				headers: {
					'Content-Type': 'application/json'
				},
				body: JSON.stringify({
					video_url: input_video_url.value
				})
			})
			.then(res => res.json())
			.then(res => {
				if (!res.msg) {
					console.log(res.downloadAddr);
					displayBtnDownload.style.display = 'block'
					btn_download.scrollIntoView()


				} else {
					showAlert("Error, can not get video source url!")
				}
			})
			.finally(() => {
				loading.style.display = "none"
			})

	}

	function force_download(source_url) {
		var xhr = new XMLHttpRequest();
		xhr.open('get', source_url, true);
		xhr.responseType = 'blob';
		xhr.onload = function(e) {
			var blob = xhr.response;
			var fileName = Math.random() + ".mp4"
			if (window.navigator && window.navigator.msSaveOrOpenBlob) { //IE
				window.navigator.msSaveOrOpenBlob(blob, fileName);
			} else { // for others
				var url = window.URL.createObjectURL(blob);
				const a = document.createElement('a');
				a.style.display = 'none';
				a.href = url;
				a.download = fileName;
				document.body.appendChild(a);
				a.click();
				window.URL.revokeObjectURL(url);
			};
		}
		xhr.send()
	}
</script>